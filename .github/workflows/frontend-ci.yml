name: Frontend CI

on:
  pull_request:
    branches: [main]
    types:
      - opened
      - synchronize

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Save node_modules cache
        uses: actions/cache@v4
        id: node_modules_cache_id
        env:
          cache-name: cache-node-modules
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/bun.lockb') }}
      - name: Install dependencies
        run: bun install

  typecheck:
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Restore cached node_modules
        uses: actions/cache@v4
        id: node_modules_cache_id
        env:
          cache-name: cache-node-modules
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/bun.lockb') }}
      - run: echo '${{ toJSON(steps.node_modules_cache_id.outputs) }}'
      - name: Check Type
        uses: bun typecheck
  # lint:
  #   needs: [setup]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Setup Bun
  #       uses: oven-sh/setup-bun@v1
  #       with:
  #         bun-version: latest
  #     - name: Restore cached node_modules
  #       uses: actions/cache@v4
  #       id: node_modules_cache_id
  #       env:
  #         cache-name: cache-node-modules
  #       with:
  #         path: "**/node_modules"
  #         key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/bun.lockb') }}
  #     - run: echo '${{ toJSON(steps.node_modules_cache_id.outputs) }}'
  #     - name: Run Lint
  #       run: bun run lint
  # test:
  #   needs: [setup]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Setup Bun
  #       uses: oven-sh/setup-bun@v1
  #       with:
  #         bun-version: latest
  #     - name: Restore cached node_modules
  #       uses: actions/cache@v4
  #       id: node_modules_cache_id
  #       env:
  #         cache-name: cache-node-modules
  #       with:
  #         path: "**/node_modules"
  #         key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/bun.lockb') }}
  #     - name: Run Test
  #       # run: bun test
  #       run: npm run test
  # deploy:
  #   needs: [typecheck, lint, test]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Setup Bun
  #       uses: oven-sh/setup-bun@v1
  #       with:
  #         bun-version: latest
  #     - name: Restore cached node_modules
  #       uses: actions/cache@v4
  #       id: node_modules_cache_id
  #       env:
  #         cache-name: cache-node-modules
  #       with:
  #         path: "**/node_modules"
  #         key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/bun.lockb') }}
  #     - name: Build
  #       run: bun run
  #     - name: Deploy to Cloudflare Pages
  #       uses: cloudflare/pages-action@1
  #       with:
  #         accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
  #         apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  #         projectName: simple-typing
  #         directory: ./build/client
  #         gitHubToken: ${{ secrets.GITHUB_TOKEN }}
